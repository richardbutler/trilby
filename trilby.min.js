/**
 * trilby.js
 *
 * @author      Richard Butler <rich@smartcasual.io>
 * @license     MIT <https://github.com/richardbutler/trilby/blob/master/LICENSE>
 * @version     0.1.0
 */
!function(n,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():n.facet=t()}(this,function(){"use strict";function n(n){return n&&"function"==typeof n.__trilby__?n:(n=i(n),Object.keys(u).forEach(function(t){n[t]=u[t].bind(n)}),n)}function t(n){return Array.isArray(n)}function r(n){return n&&n.hasOwnProperty("callee")}function i(n){return"undefined"==typeof n?[]:r(n)?e.slice.call(n):t(n)?n.slice():[n]}var e=Array.prototype,u={pluck:function(n){return this.map(function(t){return t[n]})},unique:function(n){var t={};return this.filter(function(r){var i="undefined"==typeof n?r:r[n];return i in t?!1:(t[i]=r,!0)})},filter:function(t,r){return n(e.filter.call(this,function(n){return t(r?n[r]:n)}))},map:function(){return n(e.map.apply(this,arguments))},add:function(n){return i(arguments.length>1?arguments:n).forEach(function(n){this.contains(n)||this.push(n)},this),this},remove:function(n){return i(arguments.length>1?arguments:n).forEach(function(n){var t=this.indexOf(n);t>=0&&this.splice(t,1)},this),this},contains:function(n){for(n=i(n);n.length;)if(-1===this.indexOf(n.shift()))return!1;return!0},clone:function(){return n(e.slice.call(this))},invoke:function(n){return this.map(function(t){return"function"==typeof t[n]?t[n].call(this,t):void 0},this)},toArray:function(){return e.slice.call(this)},__trilby__:function(){return!0}};return n});